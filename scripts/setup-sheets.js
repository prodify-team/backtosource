#!/usr/bin/env node

// Load environment variables
require('dotenv').config();

const GoogleSheetsDB = require('./src/config/googleSheets');

async function setupGoogleSheets() {
  console.log('ЁЯУК Setting up Google Sheets database...');
  
  try {
    // Initialize Google Sheets
    await GoogleSheetsDB.initialize();
    
    // Check health
    const health = await GoogleSheetsDB.healthCheck();
    console.log('ЁЯУЛ Health Check:', health);
    
    if (health.status === 'connected') {
      console.log('тЬЕ Google Sheets connected successfully!');
      console.log(`ЁЯУД Sheet Title: ${health.sheetTitle}`);
      console.log(`ЁЯУК Sheets Created: ${health.sheetsCount}`);
      
      // Add sample data
      console.log('\nЁЯМ▒ Adding sample data...');
      
      // Sample restaurants (these will be added to the sheet)
      const sampleRestaurants = [
        { name: 'Back to Source - Connaught Place', locationCode: 'delhi-cp', address: 'Block A, Connaught Place', city: 'New Delhi', state: 'Delhi', manager: 'рд░рд╛рдЬреЗрд╢ рдХреБрдорд╛рд░', phone: '+91-11-4567-8901', isActive: 'true' },
        { name: 'Back to Source - Bandra', locationCode: 'mumbai-bandra', address: 'Linking Road, Bandra West', city: 'Mumbai', state: 'Maharashtra', manager: 'рд╡рд┐рдХрд╛рд╕ рдкрдЯреЗрд▓', phone: '+91-22-4567-8903', isActive: 'true' },
        { name: 'Back to Source - Koramangala', locationCode: 'bangalore-koramangala', address: '5th Block, Koramangala', city: 'Bangalore', state: 'Karnataka', manager: 'рдЕрд░реНрдЬреБрди рд░рд╛рд╡', phone: '+91-80-4567-8905', isActive: 'true' }
      ];
      
      // Sample users
      const sampleUsers = [
        { phone: '+919876543210', name: 'рд░рд╛рдЬреЗрд╢ рдХреБрдорд╛рд░', role: 'restaurant-manager', location: 'delhi-cp', preferredLanguage: 'hindi' },
        { phone: '+919876543211', name: 'рдкреНрд░рд┐рдпрд╛ рд╢рд░реНрдорд╛', role: 'head-chef', location: 'delhi-cp', preferredLanguage: 'hindi' },
        { phone: '+919876543212', name: 'рдЕрдорд┐рдд рдЧреБрдкреНрддрд╛', role: 'waiter', location: 'delhi-cp', preferredLanguage: 'hindi' },
        { phone: '+919876543219', name: 'рд╕рдВрдЬрдп рдЕрдЧреНрд░рд╡рд╛рд▓', role: 'owner', location: 'delhi-cp', preferredLanguage: 'hindi' }
      ];
      
      // Add sample users
      for (const userData of sampleUsers) {
        try {
          await GoogleSheetsDB.createUser(userData);
          console.log(`ЁЯСд Added user: ${userData.name}`);
        } catch (error) {
          console.log(`   тЪая╕П  User ${userData.name} might already exist`);
        }
      }
      
      // Sample knowledge documents
      const sampleDocs = [
        {
          title: 'Dal Makhani Recipe - Signature',
          category: 'recipes',
          content: 'Dal Makhani - Back to Source Signature. Ingredients: рдХрд╛рд▓реА рджрд╛рд▓ 1 cup, рд░рд╛рдЬрдорд╛ 1/4 cup, рдордХреНрдЦрди 4 tbsp, рдХреНрд░реАрдо 1/2 cup. Method: 1) Soak 8 hours 2) Pressure cook 4-5 whistles 3) Slow cook 4-6 hours 4) Add cream and butter. Important: рдзреАрдореА рдЖрдВрдЪ рдкрд░ рдкрдХрд╛рдирд╛ рдЬрд░реВрд░реА рд╣реИред',
          tags: 'dal,makhani,signature,recipe',
          uploadedBy: 'admin'
        },
        {
          title: 'Kitchen Hygiene Standards',
          category: 'sops',
          content: 'Daily Hygiene SOP: 1) рд╣рд╛рде рдзреЛрдирд╛ 20 seconds soap рд╕реЗ 2) Clean apron рдФрд░ hair net 3) No jewelry except wedding ring 4) Temperature checks: Cold 4┬░C, Hot 65┬░C+ 5) Raw рдФрд░ cooked food separate 6) FIFO principle 7) Equipment sanitization',
          tags: 'hygiene,safety,kitchen,sop',
          uploadedBy: 'admin'
        }
      ];
      
      // Add sample knowledge documents
      for (const doc of sampleDocs) {
        try {
          await GoogleSheetsDB.createKnowledgeDocument(doc);
          console.log(`ЁЯУЪ Added document: ${doc.title}`);
        } catch (error) {
          console.log(`   тЪая╕П  Document ${doc.title} might already exist`);
        }
      }
      
      // Sample tasks
      const sampleTasks = [
        {
          title: 'рджрд╛рд▓ рдордЦрдиреА рддреИрдпрд╛рд░ рдХрд░реЗрдВ - Evening Service',
          description: 'рд╢рд╛рдо рдХреА service рдХреЗ рд▓рд┐рдП рджрд╛рд▓ рдордЦрдиреА рдмрдирд╛рдПрдВред 4-6 рдШрдВрдЯреЗ slow cooking requiredред',
          assignedTo: 'рдкреНрд░рд┐рдпрд╛ рд╢рд░реНрдорд╛',
          assignedBy: 'рд░рд╛рдЬреЗрд╢ рдХреБрдорд╛рд░',
          role: 'chef',
          priority: 'high'
        },
        {
          title: 'Table Setup рдФрд░ Cleaning',
          description: 'рд╕рднреА tables рдХреЛ properly set рдХрд░реЗрдВ рдФрд░ sanitize рдХрд░реЗрдВред',
          assignedTo: 'рдЕрдорд┐рдд рдЧреБрдкреНрддрд╛',
          assignedBy: 'рд░рд╛рдЬреЗрд╢ рдХреБрдорд╛рд░',
          role: 'waiter',
          priority: 'medium'
        }
      ];
      
      // Add sample tasks
      for (const task of sampleTasks) {
        try {
          await GoogleSheetsDB.createTask(task);
          console.log(`ЁЯУЛ Added task: ${task.title}`);
        } catch (error) {
          console.log(`   тЪая╕П  Task ${task.title} might already exist`);
        }
      }
      
      console.log('\nЁЯОЙ Google Sheets setup completed successfully!');
      console.log('\nЁЯУК Your data is now available in Google Sheets:');
      console.log('   ЁЯСе Users sheet - Staff information');
      console.log('   ЁЯУЛ Tasks sheet - Task assignments and status');
      console.log('   ЁЯУЪ KnowledgeBase sheet - Recipes and SOPs');
      console.log('   ЁЯТм Conversations sheet - Chat analytics');
      console.log('   ЁЯПк Restaurants sheet - Location information');
      
      console.log('\nЁЯзк Test Login Credentials:');
      console.log('   ЁЯУ▒ Phone: +919876543210 (рд░рд╛рдЬреЗрд╢ рдХреБрдорд╛рд░ - Manager)');
      console.log('   ЁЯУ▒ Phone: +919876543211 (рдкреНрд░рд┐рдпрд╛ рд╢рд░реНрдорд╛ - Head Chef)');
      console.log('   ЁЯУ▒ Phone: +919876543219 (рд╕рдВрдЬрдп рдЕрдЧреНрд░рд╡рд╛рд▓ - Owner)');
      console.log('   ЁЯФР OTP: 123456 (demo)');
      
    } else {
      console.log('тЪая╕П  Google Sheets not configured - running in local mode');
      console.log('ЁЯУЭ To enable Google Sheets:');
      console.log('   1. Follow setup guide: deployment/google-sheets-setup.md');
      console.log('   2. Add GOOGLE_SHEET_ID to .env file');
      console.log('   3. Add service account credentials');
      console.log('   4. Run this script again');
    }
    
  } catch (error) {
    console.error('тЭМ Setup failed:', error.message);
    console.log('\nЁЯФз Troubleshooting:');
    console.log('   1. Check your .env file has GOOGLE_SHEET_ID');
    console.log('   2. Verify service account credentials');
    console.log('   3. Ensure sheet is shared with service account email');
    console.log('   4. Check Google Sheets API is enabled');
  }
  
  process.exit(0);
}

setupGoogleSheets();